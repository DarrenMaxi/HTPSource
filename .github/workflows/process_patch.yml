name: Process New Patch Submission

on:
  issues:
    types: [labeled]

jobs:
  process-submission:
    if: github.event.label.name == 'new-patch-submission'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4 lxml requests

      - name: Process submission with Python script
        id: process
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
          REPO_FULL_NAME: ${{ github.repository }}
        run: python .github/scripts/process.py

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: ${{ steps.process.outputs.pr_title }}
          title: ${{ steps.process.outputs.pr_title }}
          body: ${{ steps.process.outputs.pr_body }}
          branch: ${{ steps.process.outputs.branch_name }}
          base: main # 或者你的主分支名称，例如 master
          labels: new-patch
          reviewers: ${{ github.event.issue.user.login }}
          add-paths: |
            index.json
            patches/

      - name: Comment on issue with PR link
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = `${{ steps.cpr.outputs.pull-request-number }}`;
            if (prNumber) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `你好 @${{ github.event.issue.user.login }}！感谢你的提交！:tada:\n\n我们已经为你自动创建了一个 Pull Request，请在 #${prNumber} 中检查文件是否正确。仓库维护人员会尽快审核并合并它。`
              });
            } else {
               await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `你好 @${{ github.event.issue.user.login }}，机器人处理你的提交时似乎遇到了一些问题。请检查上方 Action 的日志输出获取详细信息。`
              });
            }